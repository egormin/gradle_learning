https://github.com/webdizz/sbs-gradle
git clean -df
git reset --hard 3a2ed47

## Start gradle
gradle

## Show gradle tasks
gradle tasks
gradle tasks --all # additional tasks (dynamic tasks)

## Show gradle projects and subprojects
gradle projects

## Build code (will be created directory build)
gradle build

## Clean build directory
gradle clean

## Clean and build code
gradle clean build

## Short calls
gradle ta = gradle tasks
gradle tC = gradle testClasses
gradle cle b = gradle clean build
gradle cle tC = gradle clean test Compile
gradle pTR = gradle processTestResources

## Exclude -x
gradle tC -x compileJava
gradle cle tC -x pTR = gradle clean testClasses -exclude processTestResources

## Help 
gradle help               # Common help how to use gradle
gradle help --task clean  # Help by separate task


####### GRADLE WRAPPER ####### 
This is one of innovations from gradle.
It genegates self installable gradle file. So we would have 2 files: gradlew for Linux and gradlew.bat for windows
It allows us clone ready project and to start build it without necessarily of create and configure gradle file.
So gradle will install by himself and porform needed task.
Gradlew downloads packages from resource: http://services.gradle.org/distributions/

# Run task to generate wrapper
gradle wrapper     # Will be created gradlew with the same version as now

# To change version of wrapper
1) define it in build.gradle
task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}
2) gradle wrapper      # to regenerate gradlew with new version
3) ./gradlew -version  # to check


####### GRADLE MULTIMODULE PROJECTS ####### 
# В settings.gradle описывается иерархия модулей
include ':common'  если хотим добавить модуль common

For example, we have 2 folders - one and two. Each of them contains build.gradle.
We should create settings.gradle with text: include ':one',':two'

# Short call
gradle :com:compJ # call tast compileJava in module common

####### DEPENDENCIES #######
# Show all dependencies
gradle dependencies

# Only for separate configuration
 gradle dep --configuration testCompile
